@page "/movies"
@using MovieBox.Models
@using MovieBox.Services
@inject MovieService MovieService

<PageTitle>MovieBox - Pel√≠culas</PageTitle>

<h1>üé¨ Lista de Pel√≠culas</h1>

<button class="btn btn-success mb-3" @onclick="AddSampleMovie">
    Agregar Pel√≠cula de Ejemplo
</button>

@if (movies.Any())
{
    <div class="row">
        @foreach (var movie in movies)
        {
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@movie.Title</h5>
                        <p class="card-text">@movie.Description</p>
                        <small class="text-muted">ID: @movie.Id</small>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="alert alert-info">
        No hay pel√≠culas. Haz clic en el bot√≥n para agregar una de ejemplo.
    </div>
}

@code {
    private List<Movie> movies = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadMovies();
    }

    private async Task LoadMovies()
    {
        movies = await MovieService.GetAllMoviesAsync();
        StateHasChanged();
    }

    private async Task AddSampleMovie()
    {
        var newMovie = new Movie
        {
            Title = "Pel√≠cula de Ejemplo " + DateTime.Now.ToString("HH:mm:ss"),
            Description = "Esta es una pel√≠cula de prueba agregada desde la aplicaci√≥n."
        };

        await MovieService.CreateMovieAsync(newMovie);
        await LoadMovies();
    }
}