@page "/movies"
@using MovieBox.Models
@using MovieBox.Services
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject MovieService MovieService

<PageTitle>MovieBox - Pel√≠culas</PageTitle>

<h1>üé¨ Lista de Pel√≠culas</h1>

<div class="mb-3">
    <a href="/create" class="btn btn-success">
        <i class="bi bi-plus-circle"></i> Crear Nueva Pel√≠cula
    </a>
</div>

@if (movies.Any())
{
    <div class="row">
        @foreach (var movie in movies)
        {
            <div class="col-md-6 mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@movie.Title</h5>
                        <p class="card-text">@movie.Description</p>
                        <small class="text-muted">ID: @movie.Id</small>
                        
                        <div class="mt-3">
                            <button class="btn btn-warning btn-sm" @onclick="() => EditMovie(movie.Id)">
                                <i class="bi bi-pencil"></i> Editar
                            </button>
                            <button class="btn btn-danger btn-sm ms-2" @onclick="() => DeleteMovie(movie.Id)">
                                <i class="bi bi-trash"></i> Eliminar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="alert alert-info">
        No hay pel√≠culas. <a href="/create" class="alert-link">Crea una nueva pel√≠cula</a> para comenzar.
    </div>
}

@code {
    private List<Movie> movies = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadMovies();
    }

    private async Task LoadMovies()
    {
        movies = await MovieService.GetAllMoviesAsync();
        StateHasChanged();
    }

    private void EditMovie(int id)
    {
        // Navegar a la p√°gina de edici√≥n
        NavigationManager.NavigateTo($"/edit/{id}");
    }

    private async Task DeleteMovie(int id)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "¬øEst√°s seguro de que quieres eliminar esta pel√≠cula?");
        if (confirmed)
        {
            await MovieService.DeleteMovieAsync(id);
            await LoadMovies(); // Recargar la lista
        }
    }
}